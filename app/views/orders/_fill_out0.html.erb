<!-- <div class="padding_5">


<%= form_for([@listing, @order]) do |form| %>


  <% if @order.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@order.errors.count, "error") %> prohibited this order from being saved:</h2>

      <ul>
      <% order.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :name, "Who's the Order for?" %>
    <%= form.text_field :name, class: "form-control", required: true %>
  </div> -->


  <script

    src="https://js.stripe.com/v3/">

  </script>
  <!-- <form id="form-element" action="/charges" method="post" id="payment_form"> -->

    <div class="form-row">
      <label for="card-element">
        Credit or debit card
      </label>
      <div id="card-element" class="form-control">
      </div>

      <div id="card-errors" role="alert"></div>
    </div>
      <br>
      <div class="form-group">

        <!-- <div class="field">
          <%= label_tag :card_number, "Credit Card Number" %>
          <%= text_field_tag :card_number, nil, name: nil, required: true  %>
        </div>
        <div class="field">
          <%= label_tag :card_code, "Security Code on Card (CVV)" %>
          <%= text_field_tag :card_code, nil, name: nil %>
        </div>
        <div class="field">
          <%= label_tag :card_month, "Card Expiration" %>
          <%= select_month nil, {add_month_numbers: true}, {name: nil, id: "card_month"} %>
          <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: "card_year"} %>
        </div> -->


    <%= form.submit "asdf", class:"ripple-effect", id:"button-element" %>
    <!-- <button id="button-element" class="ripple-effect">Submit Payment for </button> -->

  </div>

  <span class="token"></span>
  <!-- </form> -->
  <% end %>

  </div>
  <script>


window.onload = function () {


  // Create a Stripe client.
  var stripe = Stripe('pk_test_WUSowiZS0TqTSqQJucPWU8kh');

  // Create an instance of Elements
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  // (Note that this demo uses a wider set of styles than the guide below.)
  var style = {
    base: {
      color: '#32325d',
      lineHeight: '24px',
      fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
      fontSmoothing: 'antialiased',
      fontSize: '16px',
      '::placeholder': {
        color: '#aab7c4'
      }
    },
    invalid: {
      color: '#fa755a',
      iconColor: '#fa755a'
    }
  };

  // Create an instance of the card Element
  var card = elements.create('card', {style: style});

  // Add an instance of the card Element into the `card-element` <div>
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  // Handle form submission
  var form = document.getElementById('payment_form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server
        stripeTokenHandler(result.token);
      }
    });

    });

    function stripeTokenHandler(token) {
      // Insert the token ID into the form so it gets submitted to the server
      var form = document.getElementById('payment_form');
      var hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'stripeToken');
      hiddenInput.setAttribute('value', token.id);
      form.appendChild(hiddenInput);

      //

      ["brand", "exp_month", "exp_year", "last4"].forEach(function(field) {
         addFieldToForm(form, token, field);

      //
    });

      // Submit the form
      form.submit();

    }
}
//       $('#Orders').on('submit', function(event) {
//       event.preventDefault();
//
//
// //       $.ajax({
// //           type: "POST",
// //           url: "/charges",
// //           data: $('#payment_form').serialize()
// //       }).then(this.submit.bind(this));
// //   });
// // }
//
//       $.ajax({
//           type: "POST",
//           url: "/charges",
//           data: $('#payment_form').serialize()
//       }).then(this.submit.bind(this));
//     });
//   }

//   $('#payment_form').on(form.submit(), function(event) {
//   event.preventDefault();
//   $.ajax({
//       type: "GET",
//       url: "/listings/" + listing_id + "/orders/new",
//       data: $('#Orders').serialize()
//   }).then(this.submit.bind(this));
// });



  </script>
