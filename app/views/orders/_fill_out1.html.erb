<div class="padding_5">
  <form id="form-element" action="/charges" method="post" id="payment_form">

<%= form_for([@listing, @order]) do |form| %>


  <% if @order.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@order.errors.count, "error") %> prohibited this order from being saved:</h2>

      <ul>
      <% order.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :name, "Who's the Order for?" %>
    <%= form.text_field :name, class: "form-control" %>
  </div>

  <div class="form-group">
    <%= form.label :email, "Email address -- (Who to send Order to)" %>
    <%= form.text_field :email, class: "form-control"  %>
  </div>


  <div class="form-group">
    <%= form.label :description, "Describe to Talent what to say -- (Be as detailed as you can!)" %>
    <%= form.text_area :description, class: "form-control", :rows => 10   %>
  <!--  <textarea class="form-control" id="exampleFormControlTextarea1" rows="5"></textarea> -->
  </div>

<div class="form-group">
  <div class="row">
    <div class="col-md-6">
      <%= form.label :credit_card_number, "Credit or Debit Card" %>
      <%= form.text_field :credit_card_number, class: "form-control"  %>
    </div>
    <div class="col-md-2">
      <%= form.label :cvc, "CVC" %>
      <%= form.text_field :cvc, class: "form-control"  %>
    </div>
    <div class="col-md-4">
      <%= form.label :zip_code, "Zip Code" %>
      <%= form.text_field :zip_code, class: "form-control"  %>
    </div>
  </div>
</div>

<div class="form-group">
  <div class="row">
    <div class="col-md-3">
      <%= select_month nil, { use_two_digit_numbers: true }, { :name => nil, :'data-stripe' =>
      "exp-month", class: "form-control" } %>
    </div>
    <div class="col-md-3">
      <%= select_year nil, { start_year: Date.today.year, end_year: Date.today.year+10 }, { :name => nil, :'data-stripe' =>
      "exp-year", class: "form-control" } %>
    </div>
  </div>
</div>
    <div class="form-group">
      <%= form.submit "Order", class: "btn btn-success"  %>
    </div>

    <div class="form-row">
      <label for="card-element">
        Credit or debit card
      </label>
      <div id="card-element" class="form-control">
        <!-- a Stripe Element will be inserted here. -->
      </div>

      <!-- Used to display form errors -->
      <div id="card-errors" role="alert"></div>
    </div>
      <br>
      <div class="form-group">

    <%= form.submit "asdf", class:"ripple-effect", id:"button-element" %>
   </div>

  <span class="token"></span>
  </form>
<% end %>
</div>

<script>





// Create a Stripe client.
var stripe = Stripe('pk_test_3vXaqxqFsRG6LyWMYKE1f0B8');

// Create an instance of Elements
var elements = stripe.elements();

// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
  base: {
    color: '#32325d',
    lineHeight: '24px',
    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a'
  }
};

// Create an instance of the card Element
var card = elements.create('card', {style: style});

// Add an instance of the card Element into the `card-element` <div>
card.mount('#card-element');

// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});

// Handle form submission
var form = document.getElementById('payment_form');
form.addEventListener('submit', function(event) {
  event.preventDefault();

  stripe.createToken(card).then(function(result) {
    if (result.error) {
      // Inform the user if there was an error
      var errorElement = document.getElementById('card-errors');
      errorElement.textContent = result.error.message;
    } else {
      // Send the token to your server
      stripeTokenHandler(result.token);
    }
  });

  });

  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment_form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    //

    ["brand", "exp_month", "exp_year", "last4"].forEach(function(field) {
       addFieldToForm(form, token, field);

    //
  });

    // Submit the form
    form.submit();
  }



</script>
